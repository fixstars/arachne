ARG L4T_RELEASE_MAIN=r32.5
ARG L4T_RELEASE_PATCH=0
ARG JETSON_PLATFORM=t210
ARG CUDA_VERSION=10.2

FROM ubuntu:18.04 as build

ARG L4T_RELEASE_MAIN
ARG L4T_RELEASE_PATCH
ARG JETSON_PLATFORM
ARG CUDA_VERSION

ADD --chown=root:root https://repo.download.nvidia.com/jetson/jetson-ota-public.asc /etc/apt/trusted.gpg.d/jetson-ota-public.asc
RUN chmod 644 /etc/apt/trusted.gpg.d/jetson-ota-public.asc

RUN apt-get update && apt-get install -y ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN echo "deb https://repo.download.nvidia.com/jetson/common $L4T_RELEASE_MAIN main" >> /etc/apt/sources.list
RUN echo "deb https://repo.download.nvidia.com/jetson/$JETSON_PLATFORM $L4T_RELEASE_MAIN main" >> /etc/apt/sources.list

RUN CUDAPKG=$(echo $CUDA_VERSION | sed 's/\./-/'); \
    apt-get update && apt-get install -y --no-install-recommends \
    cuda-libraries-$CUDAPKG \
    cuda-nvtx-$CUDAPKG \
    cuda-libraries-dev-$CUDAPKG \
    cuda-minimal-build-$CUDAPKG \
    cuda-license-$CUDAPKG \
    cuda-command-line-tools-$CUDAPKG \
    libnvinfer-bin \
    libnvinfer-dev \
    libnvinfer-plugin-dev \
    && ln -s /usr/local/cuda-$CUDA_VERSION /usr/local/cuda \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-dev \
    python3-setuptools \
    gcc \
    libtinfo-dev \
    zlib1g-dev \
    build-essential \
    cmake \
    ninja-build \
    libedit-dev \
    libxml2-dev

COPY 3rdparty/tvm /tvm

RUN cd tvm && mkdir build && cp cmake/config.cmake build/config.cmake
RUN echo "set(USE_CUDA ON)\n" \
    "set(USE_CUDNN ON)\n" \
    "set(USE_TENSORRT_RUNTIME ON)\n" >> /tvm/build/config.cmake
RUN cd tvm/build && cmake -GNinja -DCMAKE_BUILD_TYPE=Release .. && cmake --build . --target runtime
RUN cd tvm && tar czf /tvm_python.tar.gz python

FROM nvcr.io/nvidia/l4t-base:${L4T_RELEASE_MAIN}.${L4T_RELEASE_PATCH}

RUN apt-get update && apt-get install -y --no-install-recommends \
    gcc \
    g++ \
    python3 \
    python3-pip \
    python3-dev \
    python3-setuptools \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN python3 -m pip install -U pip
RUN python3 -m pip install wheel
RUN python3 -m pip install "numpy==1.19.4" decorator attrs tornado psutil xgboost cloudpickle

COPY --from=build /tvm/build/libtvm_runtime.so /

COPY --from=build /tvm_python.tar.gz /

RUN mkdir /tvm_python && tar xf /tvm_python.tar.gz -C /tvm_python --strip-components 1

ENV TVM_LIBRARY_PATH=/
ENV PYTHONPATH=/tvm_python
STOPSIGNAL SIGINT
